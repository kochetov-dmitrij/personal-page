- name: Install nginx and letsencrypt
  apt:
    name: [ 'nginx', 'letsencrypt' ]
    state: latest


- name: Create letsencrypt directory
  file:
    name: /etc/letsencrypt
    state: directory
- name: Create letsencrypt certificate
  shell: letsencrypt certonly -n --webroot -w /etc/letsencrypt -m {{letsencrypt_email}} --agree-tos -d {{item.domain}}
  args:
    creates: /etc/letsencrypt/live/{{item.domain}}
  loop: "{{enforce_https}}"
- name: Add letsencrypt cronjob for cert renewal
  cron:
    name: letsencrypt_renewal_{{item.domain}}
    special_time: weekly
    job: letsencrypt --renew certonly -n --webroot -w /etc/letsencrypt -m {{letsencrypt_email}} --agree-tos -d {{item.domain}} && service nginx reload
  loop: "{{enforce_https}}"


- name: Clear all nginx sites-enabled configs
  file:
    state: "{{item}}"
    path: "/etc/nginx/sites-enabled/"
    mode: '0755'
  loop:
    - absent
    - directory
  changed_when: False
- name: Generate dhparams
  shell: openssl dhparam -out /etc/nginx/dhparams.pem 2048
  args:
    creates: /etc/nginx/dhparams.pem
- name: Install system nginx config
  template:
    src: templates/nginx.conf.j2
    dest: /etc/nginx/nginx.conf
- name: Enable nginx sites with enforcing https
  template:
    src: templates/enforce_https.j2
    dest: /etc/nginx/sites-enabled/enforce_https@{{item.domain}}
  loop: "{{enforce_https}}"
- name: Enable nginx sites with custom rules
  template:
    src: templates/domain.j2
    dest: /etc/nginx/sites-enabled/domain@{{item.domain}}
  loop: "{{domains}}"
- name: Reload nginx to activate sites
  service:
    name: nginx
    state: restarted

